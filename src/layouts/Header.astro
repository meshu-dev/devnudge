---
//type Props = { tag: string };
const { tag } = Astro.props;

let linkClasses: string = `block py-2 px-3 `;

const pages: any = [
  { name: "Home", url: "/" },
  { name: "Blog", url: "/blog" },
];
const links: string[] = [];

for (const page of pages) {
  let isCurrentPage: boolean = false;

  if (
    (Astro.url.pathname === "/" && page.url === "/") ||
    (Astro.url.pathname.search(page.url) >= 0 && page.url !== "/")
  ) {
    isCurrentPage = true;
  }

  let link: string;

  if (isCurrentPage) {
    link = `
      <span
        class="${linkClasses} text-white bg-blue-700 rounded md:bg-transparent md:text-blue-700 md:p-0 dark:text-white md:dark:text-blue-500">
        ${page.name}
      </span>
    `;
  } else {
    link = `
      <a
        href="${page.url}"
        class="${linkClasses} text-gray-900 rounded hover:bg-gray-100 md:hover:bg-transparent md:border-0 md:hover:text-blue-700 md:p-0 dark:text-white md:dark:hover:text-blue-500 dark:hover:bg-gray-700 dark:hover:text-white md:dark:hover:bg-transparent">
        ${page.name}
      </a>`;
  }
  links.push(`<li>${link}</li>`);
}
---

<header>
  <nav class="bg-white border-gray-200 dark:bg-gray-900">
    <div
      class="max-w-screen-xl flex flex-wrap items-center justify-between mx-auto p-4"
    >
      <a href="/" class="flex items-center space-x-3 rtl:space-x-reverse">
        <span
          class="self-center text-2xl font-semibold whitespace-nowrap dark:text-white"
          >DevNudge</span
        >
      </a>
      <div class="hidden w-full md:block md:w-auto" id="navbar-default">
        <ul
          class="list-none font-medium flex flex-col p-0 pt-6 mt-4 border border-gray-100 rounded-lg bg-gray-50 md:flex-row md:space-x-8 rtl:space-x-reverse md:mt-0 md:border-0 md:bg-white dark:bg-gray-800 md:dark:bg-gray-900 dark:border-gray-700"
        >
          <Fragment set:html={links} />
        </ul>
      </div>
    </div>
  </nav>
</header>
